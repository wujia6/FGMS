// <auto-generated />
using System;
using FGMS.Core.EfCore.Implements;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FGMS.Core.Migrations
{
    [DbContext(typeof(FgmsDbContext))]
    [Migration("20250708062447_update23")]
    partial class update23
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.36")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("FGMS.Models.Entities.AgvTaskSync", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("AgvCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("End")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Start")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("TaskCode")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("WorkOrderNo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("AgvTaskSyncs");
                });

            modelBuilder.Entity("FGMS.Models.Entities.Brand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Brands");
                });

            modelBuilder.Entity("FGMS.Models.Entities.CargoSpace", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Name")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("OrganizeId")
                        .HasColumnType("int");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.Property<string>("Remark")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("OrganizeId");

                    b.HasIndex("ParentId");

                    b.ToTable("CargoSpaces");
                });

            modelBuilder.Entity("FGMS.Models.Entities.Component", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("CargoSpaceHistory")
                        .HasColumnType("int");

                    b.Property<int?>("CargoSpaceId")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("IsStandard")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int?>("StandardId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int?>("WorkOrderId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CargoSpaceId");

                    b.HasIndex("StandardId");

                    b.HasIndex("WorkOrderId");

                    b.ToTable("Components");
                });

            modelBuilder.Entity("FGMS.Models.Entities.ComponentLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("DownJson")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("EquipmentCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("MaterialNo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("MaterialSpec")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("OrderNo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("RequiredDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpperJson")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.HasKey("Id");

                    b.ToTable("ComponentLogs");
                });

            modelBuilder.Entity("FGMS.Models.Entities.Element", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Angle")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("BigRangle")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Binders")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("BrandId")
                        .HasColumnType("int");

                    b.Property<int>("Category")
                        .HasColumnType("int");

                    b.Property<string>("Desc")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Diameter")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Granularity")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("InnerBoreDiameter")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Lengths")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("MaterialNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModalNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PlaneWidth")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("RingWidth")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("SmallRangle")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Spec")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Thickness")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("Unit")
                        .HasColumnType("int");

                    b.Property<string>("WheelWidth")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("BrandId");

                    b.ToTable("Elements");
                });

            modelBuilder.Entity("FGMS.Models.Entities.ElementEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:Identity", "1000, 1");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("AxialRunout")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("BeginTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("BigDiameter")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("BigRangle")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("CargoSpaceHistory")
                        .HasColumnType("int");

                    b.Property<int?>("CargoSpaceId")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("ComponentId")
                        .HasColumnType("int");

                    b.Property<string>("CurrentAngle")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("ElementId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FinishTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("InnerDiameter")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("IsGroup")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("MaterialNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OuterDiameter")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("PlaneWidth")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Position")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("QrCodeImage")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("RadialRunout")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Remark")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SmallDiameter")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("SmallRangle")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<float>("UseDuration")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("real")
                        .HasDefaultValue(0f);

                    b.Property<string>("Width")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("CargoSpaceId");

                    b.HasIndex("ComponentId");

                    b.HasIndex("ElementId");

                    b.ToTable("ElementEntities");
                });

            modelBuilder.Entity("FGMS.Models.Entities.Equipment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("Enabled")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<bool>("Mount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("OrganizeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrganizeId");

                    b.ToTable("Equipments");
                });

            modelBuilder.Entity("FGMS.Models.Entities.Organize", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("Pid")
                        .HasColumnType("int");

                    b.Property<string>("Position")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Pid");

                    b.ToTable("Organizes");
                });

            modelBuilder.Entity("FGMS.Models.Entities.RoleInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("OrganizeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrganizeId");

                    b.ToTable("RoleInfos");
                });

            modelBuilder.Entity("FGMS.Models.Entities.Standard", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("FifthElementId")
                        .HasColumnType("int");

                    b.Property<string>("FifthRangle")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("FirstElementId")
                        .HasColumnType("int");

                    b.Property<string>("FirstRangle")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("FourthElementId")
                        .HasColumnType("int");

                    b.Property<string>("FourthRangle")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("MainElementId")
                        .HasColumnType("int");

                    b.Property<int?>("SecondElementId")
                        .HasColumnType("int");

                    b.Property<string>("SecondRangle")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("ThirdElementId")
                        .HasColumnType("int");

                    b.Property<string>("ThirdRangle")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FifthElementId");

                    b.HasIndex("FirstElementId");

                    b.HasIndex("FourthElementId");

                    b.HasIndex("MainElementId");

                    b.HasIndex("SecondElementId");

                    b.HasIndex("ThirdElementId");

                    b.ToTable("Standards");
                });

            modelBuilder.Entity("FGMS.Models.Entities.TrackLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("Date")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<int?>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("TrackLogs");
                });

            modelBuilder.Entity("FGMS.Models.Entities.UserInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("RoleInfoId")
                        .HasColumnType("int");

                    b.Property<string>("WorkNo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("RoleInfoId");

                    b.ToTable("UserInfos");
                });

            modelBuilder.Entity("FGMS.Models.Entities.WorkOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("AgvStatus")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("execute");

                    b.Property<string>("AgvTaskCode")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("32a2f9ca52134261");

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<int>("EquipmentId")
                        .HasColumnType("int");

                    b.Property<string>("MaterialNo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("MaterialSpec")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("OrderNo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("Pid")
                        .HasColumnType("int");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<string>("Remark")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("RequiredDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<int>("UserInfoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EquipmentId");

                    b.HasIndex("Pid");

                    b.HasIndex("UserInfoId");

                    b.ToTable("WorkOrders");
                });

            modelBuilder.Entity("FGMS.Models.Entities.WorkOrderStandard", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("StandardId")
                        .HasColumnType("int");

                    b.Property<int>("WorkOrderId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StandardId");

                    b.HasIndex("WorkOrderId");

                    b.ToTable("WorkOrderStandard");
                });

            modelBuilder.Entity("FGMS.Models.Entities.CargoSpace", b =>
                {
                    b.HasOne("FGMS.Models.Entities.Organize", "Organize")
                        .WithMany("CargoSpaces")
                        .HasForeignKey("OrganizeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("FGMS.Models.Entities.CargoSpace", "Parent")
                        .WithMany("Childrens")
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Organize");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("FGMS.Models.Entities.Component", b =>
                {
                    b.HasOne("FGMS.Models.Entities.CargoSpace", "CargoSpace")
                        .WithMany("Components")
                        .HasForeignKey("CargoSpaceId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("FGMS.Models.Entities.Standard", "Standard")
                        .WithMany("Components")
                        .HasForeignKey("StandardId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("FGMS.Models.Entities.WorkOrder", "WorkOrder")
                        .WithMany("Components")
                        .HasForeignKey("WorkOrderId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("CargoSpace");

                    b.Navigation("Standard");

                    b.Navigation("WorkOrder");
                });

            modelBuilder.Entity("FGMS.Models.Entities.Element", b =>
                {
                    b.HasOne("FGMS.Models.Entities.Brand", "Brand")
                        .WithMany("Elements")
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Brand");
                });

            modelBuilder.Entity("FGMS.Models.Entities.ElementEntity", b =>
                {
                    b.HasOne("FGMS.Models.Entities.CargoSpace", "CargoSpace")
                        .WithMany("ElementEntities")
                        .HasForeignKey("CargoSpaceId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("FGMS.Models.Entities.Component", "Component")
                        .WithMany("ElementEntities")
                        .HasForeignKey("ComponentId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("FGMS.Models.Entities.Element", "Element")
                        .WithMany("ElementEntities")
                        .HasForeignKey("ElementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CargoSpace");

                    b.Navigation("Component");

                    b.Navigation("Element");
                });

            modelBuilder.Entity("FGMS.Models.Entities.Equipment", b =>
                {
                    b.HasOne("FGMS.Models.Entities.Organize", "Organize")
                        .WithMany("Equipments")
                        .HasForeignKey("OrganizeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Organize");
                });

            modelBuilder.Entity("FGMS.Models.Entities.Organize", b =>
                {
                    b.HasOne("FGMS.Models.Entities.Organize", "Parent")
                        .WithMany("Childrens")
                        .HasForeignKey("Pid")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("FGMS.Models.Entities.RoleInfo", b =>
                {
                    b.HasOne("FGMS.Models.Entities.Organize", "Organize")
                        .WithMany("RoleInfos")
                        .HasForeignKey("OrganizeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Organize");
                });

            modelBuilder.Entity("FGMS.Models.Entities.Standard", b =>
                {
                    b.HasOne("FGMS.Models.Entities.Element", "FifthElement")
                        .WithMany("FifthStandards")
                        .HasForeignKey("FifthElementId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("FGMS.Models.Entities.Element", "FirstElement")
                        .WithMany("FirstStandards")
                        .HasForeignKey("FirstElementId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("FGMS.Models.Entities.Element", "FourthElement")
                        .WithMany("FourthStandards")
                        .HasForeignKey("FourthElementId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("FGMS.Models.Entities.Element", "MainElement")
                        .WithMany("MainStandards")
                        .HasForeignKey("MainElementId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("FGMS.Models.Entities.Element", "SecondElement")
                        .WithMany("SecondStandards")
                        .HasForeignKey("SecondElementId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("FGMS.Models.Entities.Element", "ThirdElement")
                        .WithMany("ThirdStandards")
                        .HasForeignKey("ThirdElementId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("FifthElement");

                    b.Navigation("FirstElement");

                    b.Navigation("FourthElement");

                    b.Navigation("MainElement");

                    b.Navigation("SecondElement");

                    b.Navigation("ThirdElement");
                });

            modelBuilder.Entity("FGMS.Models.Entities.UserInfo", b =>
                {
                    b.HasOne("FGMS.Models.Entities.RoleInfo", "RoleInfo")
                        .WithMany("UserInfos")
                        .HasForeignKey("RoleInfoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RoleInfo");
                });

            modelBuilder.Entity("FGMS.Models.Entities.WorkOrder", b =>
                {
                    b.HasOne("FGMS.Models.Entities.Equipment", "Equipment")
                        .WithMany("WorkOrders")
                        .HasForeignKey("EquipmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FGMS.Models.Entities.WorkOrder", "Parent")
                        .WithMany("Childrens")
                        .HasForeignKey("Pid")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("FGMS.Models.Entities.UserInfo", "UserInfo")
                        .WithMany("WorkOrders")
                        .HasForeignKey("UserInfoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Equipment");

                    b.Navigation("Parent");

                    b.Navigation("UserInfo");
                });

            modelBuilder.Entity("FGMS.Models.Entities.WorkOrderStandard", b =>
                {
                    b.HasOne("FGMS.Models.Entities.Standard", "Standard")
                        .WithMany("WorkOrderStandards")
                        .HasForeignKey("StandardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FGMS.Models.Entities.WorkOrder", "WorkOrder")
                        .WithMany("WorkOrderStandards")
                        .HasForeignKey("WorkOrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Standard");

                    b.Navigation("WorkOrder");
                });

            modelBuilder.Entity("FGMS.Models.Entities.Brand", b =>
                {
                    b.Navigation("Elements");
                });

            modelBuilder.Entity("FGMS.Models.Entities.CargoSpace", b =>
                {
                    b.Navigation("Childrens");

                    b.Navigation("Components");

                    b.Navigation("ElementEntities");
                });

            modelBuilder.Entity("FGMS.Models.Entities.Component", b =>
                {
                    b.Navigation("ElementEntities");
                });

            modelBuilder.Entity("FGMS.Models.Entities.Element", b =>
                {
                    b.Navigation("ElementEntities");

                    b.Navigation("FifthStandards");

                    b.Navigation("FirstStandards");

                    b.Navigation("FourthStandards");

                    b.Navigation("MainStandards");

                    b.Navigation("SecondStandards");

                    b.Navigation("ThirdStandards");
                });

            modelBuilder.Entity("FGMS.Models.Entities.Equipment", b =>
                {
                    b.Navigation("WorkOrders");
                });

            modelBuilder.Entity("FGMS.Models.Entities.Organize", b =>
                {
                    b.Navigation("CargoSpaces");

                    b.Navigation("Childrens");

                    b.Navigation("Equipments");

                    b.Navigation("RoleInfos");
                });

            modelBuilder.Entity("FGMS.Models.Entities.RoleInfo", b =>
                {
                    b.Navigation("UserInfos");
                });

            modelBuilder.Entity("FGMS.Models.Entities.Standard", b =>
                {
                    b.Navigation("Components");

                    b.Navigation("WorkOrderStandards");
                });

            modelBuilder.Entity("FGMS.Models.Entities.UserInfo", b =>
                {
                    b.Navigation("WorkOrders");
                });

            modelBuilder.Entity("FGMS.Models.Entities.WorkOrder", b =>
                {
                    b.Navigation("Childrens");

                    b.Navigation("Components");

                    b.Navigation("WorkOrderStandards");
                });
#pragma warning restore 612, 618
        }
    }
}
